{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACxC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACnE,CAAC,EAAE,CAAC,GAAG,IAAI;IACZ,CAAC;AACF,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AACvC,EAAgD,AAAhD,8CAAgD;AAChD,EAAyD,AAAzD,uDAAyD;AAEzD,EAAuC,AAAvC,qCAAuC;AAEvC,KAAK,CAAC,UAAU,aAAe,CAAC;IAC/B,GAAG,CAAC,CAAC;QACJ,EAAiB,AAAjB,eAAiB;QACjB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CACvB,CAA2E;QAE5E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI;QAE5B,EAA2B,AAA3B,yBAA2B;QAE3B,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/D,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,KAAK,CAAC,CAAC,CAAC,EAAE,GAAE,KAAK,GAAE,SAAS,GAAE,QAAQ,GAAE,WAAW,EAAC,CAAC,GAAG,MAAM;QAE9D,MAAM,GAAG,CAAC;YACT,EAAE;YACF,KAAK;YACL,SAAS;YACT,QAAQ;YACR,WAAW;YACX,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,YAAY;QACjC,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,EAAmB,AAAnB,iBAAmB;QACnB,KAAK,CAAC,MAAM,IAAI;;kBAEA,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;gBAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;qEASsC,EAC/D,MAAM,CAAC,WAAW,CAClB;;;;;;;oEAO8D,EAC9D,MAAM,CAAC,QAAQ,CACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgCI,EAAE,MAAM,CAAC,WAAW,CACvB,GAAG,EAAE,GAAG,GAAK,CAAC;YACd,MAAM,EAAE;;;;;8CAK+B,EAAE,GAAG,CAAC,QAAQ,CAAC;;6CAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;kBACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;YAGxB;QACN,CAAC,EACA,IAAI,CAAC,CAAE,GAAE;;;;;;;;0CAQ0B,EACpC,MAAM,CAAC,SAAS,CAChB;;;;;gBAKU,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IAS/B;QACF,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IACxD,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,GAAG;QACf,KAAK,CAAC,GAAG;IACV,CAAC;AACF,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n\treturn new Promise(function (_, reject) {\n\t\tsetTimeout(function () {\n\t\t\treject(new Error(`Request took too long! Timeout after ${s} second`));\n\t\t}, s * 1000);\n\t});\n};\n\n// https://forkify-api.herokuapp.com/v2\n// API key: 6cc043c1-7f8c-40dc-8239-e0366986d266\n// const APIKey = \"6cc043c1-7f8c-40dc-8239-e0366986d266\";\n\n///////////////////////////////////////\n\nconst showRecipe = async () => {\n\ttry {\n\t\t// loading recipe\n\t\tconst resp = await fetch(\n\t\t\t\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\"\n\t\t);\n\t\tconst data = await resp.json();\n\n\t\t// console.log(resp, data);\n\n\t\tif (!resp.ok) throw new Error(`${data.message} (${resp.status})`);\n\n\t\tlet { recipe } = data.data;\n\t\tconst { id, title, publisher, servings, ingredients } = recipe;\n\n\t\trecipe = {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tpublisher,\n\t\t\tservings,\n\t\t\tingredients,\n\t\t\tsourceURL: recipe.source_url,\n\t\t\timage: recipe.image_url,\n\t\t\tcookingTime: recipe.cooking_time\n\t\t};\n\n\t\tconsole.log(recipe);\n\n\t\t// rendering recipe\n\t\tconst markup = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\n\t\t\t\t\t\trecipe.cookingTime\n\t\t\t\t\t}</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${\n\t\t\t\t\t\trecipe.servings\n\t\t\t\t\t}</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients\n\t\t\t\t\t\t.map((ing) => {\n\t\t\t\t\t\t\treturn `\n              <li class=\"recipe__ingredient\">\n                <svg class=\"recipe__icon\">\n                  <use href=\"src/img/icons.svg#icon-check\"></use>\n                </svg>\n                <div class=\"recipe__quantity\">${ing.quantity}</div>\n                <div class=\"recipe__description\">\n                  <span class=\"recipe__unit\">${ing.unit}</span>\n                  ${ing.description}\n                </div>\n              </li>\n            `;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${\n\t\t\t\t\t\trecipe.publisher\n\t\t\t\t\t}</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceURL}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n\t\trecipeContainer.innerHTML = \"\";\n\t\trecipeContainer.insertAdjacentHTML(\"afterbegin\", markup);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\talert(err);\n\t}\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}